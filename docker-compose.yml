services:
  # 365 Email System - Production-Ready ActiveSync Server
  email-system:
    build: .
    container_name: 365-email-system
    restart: unless-stopped
    user: "0:0" # Run as root for port 25 access
    environment:
      # Core Configuration (override in .env file)
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this-in-production}
      - DATABASE_URL=${DATABASE_URL:-sqlite:////app/data/email_system.db}
      - LOGS_DIR=${LOGS_DIR:-/app/logs}
      - HOSTNAME=${HOSTNAME:-owa.shtrum.com}
      - DOMAIN=${DOMAIN:-owa.shtrum.com}
    ports:
      - "25:25" # Expose SMTP port 25
      - "8001:8001" # Expose FastAPI application
      - "8004:8004" # Expose standalone WebSocket server
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - email-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'python -c "import urllib.request,sys; sys.exit(0 if urllib.request.urlopen(''http://localhost:8001/health'', timeout=5).status==200 else 1)"',
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: 365-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      email-system:
        condition: service_healthy
    networks:
      - email-network

  # Certbot for SSL certificates (optional - can use custom certs)
  certbot:
    image: certbot/dns-cloudflare
    container_name: 365-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./certbot-setup.sh:/certbot-setup.sh:ro
    entrypoint: ["/bin/sh", "/certbot-setup.sh"]
    environment:
      # SSL Certificate Configuration (override in .env file)
      # Set CLOUDFLARE_API_TOKEN in .env if using Cloudflare DNS
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN:-}
      - DOMAIN=${DOMAIN:-owa.shtrum.com}
      - ALT_NAMES=${ALT_NAMES:-autodiscover.shtrum.com,mail.shtrum.com}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@shtrum.com}
    networks:
      - email-network
    profiles:
      - ssl  # Only start if explicitly requested: docker-compose --profile ssl up

networks:
  email-network:
    driver: bridge

volumes:
  email-data:
  email-logs:
